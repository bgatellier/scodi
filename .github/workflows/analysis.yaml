name: Analysis

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  list-projects:
    name: List projects
    runs-on: ubuntu-latest
    outputs:
      list: ${{ steps.moon-query.outputs.json }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: Setup Moon
        uses: moonrepo/setup-toolchain@937d7dbbc1ec218aa8641c792d5821addebd9f03 # v0
        with:
          auto-install: true

      # Guess projects that have been changed:
      # - for Pull Requests, guess from changed files only
      # - for other cases, guess from all files
      - name: Guess projects
        id: moon-query
        run: |
          projects=$(./devops/scripts/list-projects.sh ${{ env.ONLY_AFFECTED }})
          echo "json=${projects}" >> "$GITHUB_OUTPUT"
        env:
          # Guess if the event that triggered the workflow is a push on a branch or a pull request.
          # See github.ref possibles values: https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/accessing-contextual-information-about-workflow-runs#github-context
          ONLY_AFFECTED: ${{ startsWith(github.ref, 'refs/pull/') }}

  sonarcloud:
    name: Code coverage
    runs-on: ubuntu-latest
    needs: list-projects
    # Do not run this job if no project have been changed
    # Note: GitHub performs loose equality comparisons; env.PROJECTS is an array, so GitHub GitHub coerces the type to NaN.
    # And when NaN is one of the operands of any relational comparison (>, <, >=, <=), the result is always false.
    # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/evaluate-expressions-in-workflows-and-actions#operators
    if: ${{ toJSON(fromJSON(needs.list-projects.outputs.list).projects) != '[]' }}
    strategy:
      matrix:
        projects: ${{ fromJSON(needs.list-projects.outputs.list).projects }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          # Disabling shallow clones is recommended for improving the relevancy of SonarQube reporting
          fetch-depth: 0

      - name: Setup Moon toolchain
        uses: moonrepo/setup-toolchain@937d7dbbc1ec218aa8641c792d5821addebd9f03 # v0
        with:
          auto-install: true

      - name: Get pnpm store directory
        id: pnpm-cache
        run: echo "pnpm_cache_dir=$(pnpm store path)" >> ${GITHUB_OUTPUT}

      - uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        name: Setup pnpm cache
        with:
          path: |
            ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
            /home/runner/.cache/puppeteer
          key: ${{ runner.os }}-pnpm-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Generate coverage report
        run: moon run ${{ matrix.projects.id }}:coverage

      - uses: sonarsource/sonarqube-scan-action@2500896589ef8f7247069a56136f8dc177c27ccf # v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: ${{ matrix.projects.source }}
          args: >
            -Dsonar.organization=bgatellier
            -Dsonar.projectKey=scodi-${{ matrix.projects.id }}
            -Dsonar.sources=src/
            -Dsonar.tests=tests/
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
